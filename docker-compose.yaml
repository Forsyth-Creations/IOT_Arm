version: '3.3'

services:

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    network_mode: host
    # command: tail -f /dev/null
    command: uvicorn main:app --reload --port=8000
    volumes:
      - ./backend:/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    network_mode: host
    volumes:
      - ./frontend:/app
    command: npm run dev

  db:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    ports:
      - "8080:8080"
    volumes:
      - ./docker/dynamodb:/home/dynamodblocal/data
    environment:
      AWS_ACCESS_KEY_ID: "local"
      AWS_SECRET_ACCESS_KEY: "local"
    #   AWS_SESSION_TOKEN: "local"
      # AWS_DEFAULT_REGION: "us-east-1"
    command: '-jar DynamoDBLocal.jar -port 8080 --cors "*" -sharedDb'

  db-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      DYNAMO_ENDPOINT: "http://dynamodb-local:8080"
      # AWS_ACCESS_KEY_ID: "local"
      # AWS_SECRET_ACCESS_KEY: "local"
      # AWS_SESSION_TOKEN: "local"
      # AWS_DEFAULT_REGION: "us-east-1"
    depends_on:
      - db

  nginx:
    image: nginx
    network_mode: host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf


  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ~/mongoData:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb
